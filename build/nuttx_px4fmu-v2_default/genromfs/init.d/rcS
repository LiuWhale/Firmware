set +e
set AUX_MODE pwm
set DATAMAN_OPT ""
set FAILSAFE none
set FAILSAFE_AUX none
set FCONFIG /fs/microsd/etc/config.txt
set FEXTRAS /fs/microsd/etc/extras.txt
set FRC /fs/microsd/etc/rc.txt
set FMU_ARGS ""
set FMU_MODE pwm
set IOFW "/etc/extras/px4io-v2.bin"
set IO_PRESENT no
set LOG_FILE /fs/microsd/bootlog.txt
set MAV_TYPE none
set MIXER none
set MIXER_AUX none
set MIXER_FILE none
set MK_MODE none
set MKBLCTRL_ARG ""
set OUTPUT_MODE none
set PARAM_FILE /fs/microsd/params
set PWM_AUX_DISARMED p:PWM_AUX_DISARMED
set PWM_AUX_MAX p:PWM_AUX_MAX
set PWM_AUX_MIN p:PWM_AUX_MIN
set PWM_AUX_OUT none
set PWM_AUX_RATE p:PWM_AUX_RATE
set PWM_DISARMED p:PWM_DISARMED
set PWM_MAX p:PWM_MAX
set PWM_MIN p:PWM_MIN
set PWM_OUT none
set PWM_RATE p:PWM_RATE
set SDCARD_MIXERS_PATH /fs/microsd/etc/mixers
set USE_IO no
set VEHICLE_TYPE none
mount -t procfs /proc
sercon
ver all
uorb start
tone_alarm start
if mount -t vfat /dev/mmcsd0 /fs/microsd
then
if hardfault_log check
then
tune_control play -t 2
if hardfault_log commit
then
hardfault_log reset
fi
else
tune_control play -t 1
fi
else
tune_control play -t 16
if mkfatfs /dev/mmcsd0
then
if mount -t vfat /dev/mmcsd0 /fs/microsd
then
echo "INFO [init] card formatted"
else
tune_control play -t 17
echo "ERROR [init] format failed"
set LOG_FILE /dev/null
fi
else
set LOG_FILE /dev/null
fi
fi
if ! ver hwcmp CRAZYFLIE AEROCORE2
then
if [ $LOG_FILE == /dev/null ]
then
tune_control play -t 2
fi
fi
if [ -f $FRC ]
then
sh $FRC
else
dataman start $DATAMAN_OPT
send_event start
load_mon start
if mtd start
then
set PARAM_FILE /fs/mtd_params
fi
param select $PARAM_FILE
if ! param load
then
param reset
fi
if ver hwcmp PX4FMU_V2
then
set BL_FILE /etc/extras/px4fmuv3_bl.bin
if [ -f $BL_FILE ]
then
if param compare SYS_BL_UPDATE 1
then
param set SYS_BL_UPDATE 0
param save
echo "BL update..." >> $LOG_FILE
bl_update $BL_FILE
echo "BL update done" >> $LOG_FILE
reboot
fi
fi
unset BL_FILE
fi
if ! rgbled start
then
if blinkm start
then
blinkm systemstate
fi
fi
rgbled_pwm start
if param compare SYS_AUTOCONFIG 1
then
param reset_nostart RC* COM_FLTMODE* LND_FLIGHT_T_* TC_* CAL_ACC* CAL_GYRO*
set AUTOCNF yes
else
set AUTOCNF no
if param compare BAT_N_CELLS 0
then
param set BAT_N_CELLS 3
fi
fi
if ver hwcmp AEROCORE2
then
set DATAMAN_OPT "-f /fs/mtd_dataman"
fi
if ver hwcmp AEROFC_V1
then
if param compare SYS_AUTOSTART 0
then
set AUTOCNF yes
fi
param set SYS_AUTOSTART 4070
set DATAMAN_OPT -i
fi
if ver hwcmp CRAZYFLIE
then
if param compare SYS_AUTOSTART 0
then
param set SYS_AUTOSTART 4900
set AUTOCNF yes
fi
fi
if ver hwcmp NXPHLITE_V3
then
param set SYS_FMU_TASK 1
fi
if param compare SYS_FMU_TASK 1
then
set FMU_ARGS "-t"
fi
if ! param compare SYS_AUTOSTART 0
then
sh /etc/init.d/rc.autostart
fi
if [ -f $FCONFIG ]
then
echo "Custom: ${FCONFIG}"
sh $FCONFIG
fi
if [ $AUTOCNF == yes ]
then
if ver hwcmp PX4FMU_V4 PX4FMU_V4PRO PX4FMU_V5
then
param set SYS_FMU_TASK 1
fi
if ver hwcmp PX4FMU_V4 OMNIBUS_F4SD
then
param set CBRK_IO_SAFETY 22027
fi
if ver hwcmp OMNIBUS_F4SD
then
param set SYS_FMU_TASK 1
param set SYS_HAS_MAG 0
param set SYS_MC_EST_GROUP 1
param set ATT_ACC_COMP 0
param set ATT_W_ACC 0.4000
param set ATT_W_GYRO_BIAS 0.0000
fi
param set SYS_AUTOCONFIG 0
fi
if [ -f $IOFW ]
then
if ! ver hwtypecmp V540
then
if px4io checkcrc ${IOFW}
then
set IO_PRESENT yes
else
tune_control play -t 18
if px4io start
then
if ! px4io safety_on
then
px4io stop
fi
fi
if px4io forceupdate 14662 ${IOFW}
then
usleep 10000
tune_control stop
if px4io checkcrc ${IOFW}
then
echo "PX4IO CRC OK after updating" >> $LOG_FILE
tune_control play -t 19
set IO_PRESENT yes
fi
fi
if [ $IO_PRESENT == no ]
then
echo "PX4IO update failed" >> $LOG_FILE
tune_control play -t 20
fi
fi
fi
fi
if param compare SYS_USE_IO 1
then
set USE_IO yes
fi
if [ $USE_IO == yes -a $IO_PRESENT == no ]
then
echo "PX4IO not found" >> $LOG_FILE
tune_control play -t 2
fi
if [ $IO_PRESENT == no -o $USE_IO == no ]
then
rc_input start
fi
if param compare SYS_HITL 1
then
set OUTPUT_MODE hil
sensors start -h
commander start --hil
param set GPS_1_CONFIG 0
else
sh /etc/init.d/rc.sensors
commander start
fi
if param compare SENS_EN_LL40LS 1
then
set FMU_MODE pwm4
set AUX_MODE pwm4
fi
if param greater TRIG_MODE 0
then
if param compare TRIG_PINS 56
then
set FMU_MODE pwm4
set AUX_MODE pwm4
else
set FMU_MODE none
set AUX_MODE none
fi
camera_trigger start
param set CAM_FBACK_MODE 1
camera_feedback start
fi
if param greater UAVCAN_ENABLE 0
then
if uavcan start
then
if param greater UAVCAN_ENABLE 1
then
uavcan start fw
if param greater UAVCAN_ENABLE 2
then
set OUTPUT_MODE uavcan_esc
fi
fi
else
tune_control play -t 2
fi
fi
sh /etc/init.d/rc.mavlink
sh /etc/init.d/rc.serial
read_uart start /dev/ttyS2
if ver hwcmp PX4FMU_V4
then
if param compare TEL_FRSKY_CONFIG 0
then
frsky_telemetry start -d /dev/ttyS6 -t 15
fi
fi
sh /etc/init.d/rc.vehicle_setup
navigator start
if param compare WEST_EN 1
then
wind_estimator start
fi
sh /etc/init.d/rc.thermal_cal
sh /etc/init.d/rc.logging
if ! param compare MNT_MODE_IN -1
then
vmount start
fi
if ver hwcmp PX4FMU_V2 PX4FMU_V4 PX4FMU_V4PRO MINDPX_V2 PX4FMU_V5 OMNIBUS_F4SD
then
px4flow start &
fi
if [ -f $FEXTRAS ]
then
echo "Addons script: ${FEXTRAS}"
sh $FEXTRAS
fi
fi
unset AUX_MODE
unset DATAMAN_OPT
unset FAILSAFE
unset FAILSAFE_AUX
unset FCONFIG
unset FEXTRAS
unset FRC
unset FMU_ARGS
unset FMU_MODE
unset IOFW
unset IO_PRESENT
unset LOG_FILE
unset MAV_TYPE
unset MIXER
unset MIXER_AUX
unset MIXER_FILE
unset MK_MODE
unset MKBLCTRL_ARG
unset OUTPUT_MODE
unset PARAM_FILE
unset PWM_AUX_DISARMED
unset PWM_AUX_MAX
unset PWM_AUX_MIN
unset PWM_AUX_OUT
unset PWM_AUX_RATE
unset PWM_OUT
unset PWM_RATE
unset PWM_DISARMED
unset PWM_MAX
unset PWM_MIN
unset SDCARD_MIXERS_PATH
unset USE_IO
unset VEHICLE_TYPE
mavlink boot_complete
